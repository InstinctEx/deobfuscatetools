00401B16  PUSH EAX
00401B17  PUSH 4
00401B19  PUSH 4
00401B1B  PUSH ESI
00401B1C  PUSH 4
00401B1E  PUSH 1
00401B20  PUSH 403688                              ;  ASCII "VirtualProtect"
00401B25  PUSH 403698                              ;  ASCII "kernel32"
00401B2A  CALL 00401000                            ;  crackthi.00401000
00401B2F  MOV EAX,DWORD PTR DS:[ESI]
00401B31  MOV DWORD PTR DS:[4053B4],EAX  ; save old compile address
00401B36  LEA EAX,DWORD PTR SS:[EBP+8]
00401B39  PUSH EAX
00401B3A  PUSH DWORD PTR SS:[EBP+8]
00401B3D  MOV DWORD PTR DS:[ESI],401B5F  ; set new compile address
00401B43  PUSH 4
00401B45  PUSH ESI
00401B46  PUSH 4
00401B48  PUSH 1
00401B4A  PUSH 4036A4                              ;  ASCII "VirtualProtect"
00401B4F  PUSH 4036B4                              ;  ASCII "kernel32"
00401B54  CALL 00401000                            ;  crackthi.00401000
00401B59  ADD ESP,40
00401B5C  POP ESI
00401B5D  POP EBP
00401B5E  RETN

00401D23  PUSH 8
00401D25  POP ECX
00401D26  PUSH 20                                           ; /Arg4 = 00000020
00401D28  LEA EAX,DWORD PTR SS:[EBP-44]                     ; |
00401D2B  PUSH EAX                                          ; |Arg3
00401D2C  PUSH DWORD PTR DS:[EBX+C]                         ; |Arg2
00401D2F  LEA ESI,DWORD PTR SS:[EBP-24]                     ; |
00401D32  PUSH DWORD PTR DS:[EBX+8]                         ; |Arg1
00401D35  LEA EDI,DWORD PTR SS:[EBP-44]                     ; |
00401D38  REP MOVS DWORD PTR ES:[EDI],DWORD PTR DS:[ESI]    ; |
00401D3A  CALL 00401D8A        ; decrypt the body of method!
00401D3F  ADD ESP,10
00401D42  PUSH DWORD PTR SS:[EBP-490]
00401D48  PUSH DWORD PTR SS:[EBP-488]
00401D4E  PUSH DWORD PTR SS:[EBP+14]
00401D51  PUSH EBX
00401D52  PUSH DWORD PTR SS:[EBP-48C]
00401D58  PUSH DWORD PTR SS:[EBP+8]
00401D5B  CALL DWORD PTR DS:[4053B4] ; call original compile method

First executed is the Main method:
decrypt the body of method:
00401D8A  PUSH EBP
00401D8B  MOV EBP,ESP
00401D8D  PUSH ESI
00401D8E  XOR ESI,ESI
00401D90  CMP DWORD PTR SS:[EBP+C],ESI
00401D93  JBE SHORT 00401DB0                                ;  crackthi.00401DB0
00401D95  MOV EAX,DWORD PTR SS:[EBP+8]
00401D98  LEA ECX,DWORD PTR DS:[ESI+EAX] ; load address of current byte in ECX
00401D9B  XOR EDX,EDX
00401D9D  MOV EAX,ESI
00401D9F  DIV DWORD PTR SS:[EBP+14]      ; DWORD PTR SS:[EBP+14] = 0x20
00401DA2  MOV EAX,DWORD PTR SS:[EBP+10]  ; EAX point to table!
00401DA5  MOV AL,BYTE PTR DS:[EDX+EAX]   ; AL = size of method
00401DA8  XOR BYTE PTR DS:[ECX],AL
00401DAA  INC ESI
00401DAB  CMP ESI,DWORD PTR SS:[EBP+C]
00401DAE  JB SHORT 00401D95                                ;  crackthi.00401D95
00401DB0  POP ESI
00401DB1  POP EBP
00401DB2  RETN

0D = body size at the positions: 0, 3, 6, 9 ...
; total table size = 0x040
0012E880  0D 00 00 0D 00 00 0D 00 00 0D 00 00 0D 00 00 0D  .?..?..?
0012E890  00 00 0D 00 00 0D 00 00 0D 00 00 0D 00 00 0D 00  ..?..?..
0012E8A0  0D 00 00 0D 00 00 0D 00 00 0D 00 00 0D 00 00 0D  .?..?..?
0012E8B0  00 00 0D 00 00 0D 00 00 0D 00 00 0D 00 00 0D 00  ..?..?..

